/*
 * Candy Server
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"net/http"
	"encoding/json"
)

func BuyCandy(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")

	var order Order
	err := json.NewDecoder(r.Body).Decode(&order)
	if err != nil {
			http.Error(w, "Bad Request", http.StatusBadRequest)
			return
	}

	fmt.Printf("Money: %d\n", order.Money)
	fmt.Printf("CandyType: %s\n", order.CandyType)
	fmt.Printf("CandyCount: %d\n", order.CandyCount)
	
	candyPrice, err := getCandyPrice(order.CandyType)
	fmt.Printf("candyPrice: %d\n", candyPrice)
	
	totalPrice := candyPrice * order.CandyCount
	change := order.Money - totalPrice
	fmt.Printf("change: %d\n", change)

	var response InlineResponse201 
	if change >= 0 {
		response = InlineResponse201{
			Thanks: "Thank you!",
			Change: 5,
		}
	} else {
		// response = InlineResponse201{
		// 	ErrorMessage: fmt.Sprintf("You need {%d} more money!", change * -1),
		// }
		response = InlineResponse201{
			Thanks: fmt.Sprintf("You need {%d} more money!", change * -1),
		}
		// response = fmt.Sprintf("You need {%d} more money!", change * -1)
	}
	
	
	jsonData, err := json.Marshal(response)
	if err != nil {
		http.Error(w, "Internal Server Error", http.StatusInternalServerError)
		return
	}

	// response := InlineResponse201{
	// 	Thanks: "Thank you!",
	// 	Change: 5,
	// }
	// fmt.Printf("response %T\n", response)
	
	w.WriteHeader(http.StatusOK)
	w.Write(jsonData)
}
